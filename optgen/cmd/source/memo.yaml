exprs:
- name:   "crossJoin"
  join: true
- name:   "innerJoin"
  join: true
- name:   "leftJoin"
  join: true
- name:   "semiJoin"
  join: true
- name:   "antiJoin"
  join: true
- name:   "lookupJoin"
  join: true
  attrs:
  - [lookup, "*lookup"]
- name: "concatJoin"
  join: true
  attrs:
  - [concat, "[]*lookup"]
- name: "hashJoin"
  join: true
  attrs:
  - [innerAttrs, "[]*exprGroup"]
  - [outerAttrs, "[]*exprGroup"]
- name: "mergeJoin"
  join: true
  attrs:
  - [innerScan, "*indexScan"]
  - [outerScan, "*indexScan"]
- name: "fullOuterJoin"
  join: true
- name: "tableScan"
  sourceType: "*plan.ResolvedTable"
- name: "values"
  sourceType: "*plan.ValueDerivedTable"
- name: "tableAlias"
  sourceType: "*plan.TableAlias"
- name: "recursiveTable"
  sourceType: "*plan.RecursiveTable"
- name: "recursiveCte"
  sourceType: "*plan.RecursiveCte"
- name: "subqueryAlias"
  sourceType: "*plan.SubqueryAlias"
- name: "max1Row"
  sourceType: "sql.NameableNode"
- name: "tableFunc"
  sourceType: "sql.TableFunction"
- name: "emptyTable"
  sourceType: "*plan.EmptyTable"
- name: "project"
  unary: true
  attrs:
  - [projections, "[]*exprGroup"]
- name: "distinct"
  unary:  true
  skipExec: true

# scalar
- name: filter
  unary: true
  attrs:
  - [filters, "[]*exprGroup"]
- name: "equal"
  scalar: true
  binary: true
- name: "literal"
  scalar: true
  attrs:
  - [val, "interface{}"]
  - [typ, "sql.Type"]
- name: "colRef"
  scalar: true
  attrs:
  - [col, "sql.ColumnId"]
  - [table, "GroupId"]
  - [gf, "*expression.GetField"]
- name: "not"
  unary: true
  scalar: true
- name: "or"
  scalar: true
  binary: true
- name: "and"
  scalar: true
  binary: true
- name: "inTuple"
  scalar: true
  binary: true
- name: "lt"
  scalar: true
  binary: true
- name: "leq"
  scalar: true
  binary: true
- name: "gt"
  scalar: true
  binary: true
- name: "geq"
  scalar: true
  binary: true
- name: "nullSafeEq"
  scalar: true
  binary: true
- name: "regexp"
  scalar: true
  binary: true