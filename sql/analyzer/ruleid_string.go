// Code generated by "stringer -type=RuleId -linecomment"; DO NOT EDIT.

package analyzer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[applyDefaultSelectLimitId-0]
	_ = x[validateOffsetAndLimitId-1]
	_ = x[validateStarExpressionsId-2]
	_ = x[validateCreateTableId-3]
	_ = x[validateExprSemId-4]
	_ = x[resolveVariablesId-5]
	_ = x[resolveNamedWindowsId-6]
	_ = x[resolveSetVariablesId-7]
	_ = x[resolveViewsId-8]
	_ = x[liftCtesId-9]
	_ = x[resolveCtesId-10]
	_ = x[liftRecursiveCtesId-11]
	_ = x[resolveDatabasesId-12]
	_ = x[resolveTablesId-13]
	_ = x[loadStoredProceduresId-14]
	_ = x[validateDropTablesId-15]
	_ = x[setTargetSchemasId-16]
	_ = x[resolveCreateLikeId-17]
	_ = x[parseColumnDefaultsId-18]
	_ = x[resolveDropConstraintId-19]
	_ = x[validateDropConstraintId-20]
	_ = x[loadCheckConstraintsId-21]
	_ = x[assignCatalogId-22]
	_ = x[resolveAnalyzeTablesId-23]
	_ = x[resolveCreateSelectId-24]
	_ = x[resolveSubqueriesId-25]
	_ = x[setViewTargetSchemaId-26]
	_ = x[resolveUnionsId-27]
	_ = x[resolveDescribeQueryId-28]
	_ = x[checkUniqueTableNamesId-29]
	_ = x[disambiguateTableFunctionsId-30]
	_ = x[resolveTableFunctionsId-31]
	_ = x[resolveDeclarationsId-32]
	_ = x[resolveColumnDefaultsId-33]
	_ = x[validateColumnDefaultsId-34]
	_ = x[validateCreateTriggerId-35]
	_ = x[validateCreateProcedureId-36]
	_ = x[loadInfoSchemaId-37]
	_ = x[validateDatabaseSetId-38]
	_ = x[validatePrivilegesId-39]
	_ = x[reresolveTablesId-40]
	_ = x[setInsertColumnsId-41]
	_ = x[validateJoinComplexityId-42]
	_ = x[applyBinlogReplicaControllerId-43]
	_ = x[resolveNaturalJoinsId-44]
	_ = x[resolveOrderbyLiteralsId-45]
	_ = x[resolveFunctionsId-46]
	_ = x[flattenTableAliasesId-47]
	_ = x[pushdownSortId-48]
	_ = x[pushdownGroupbyAliasesId-49]
	_ = x[pushdownSubqueryAliasFiltersId-50]
	_ = x[qualifyColumnsId-51]
	_ = x[resolveColumnsId-52]
	_ = x[validateCheckConstraintId-53]
	_ = x[resolveBarewordSetVariablesId-54]
	_ = x[replaceCountStarId-55]
	_ = x[expandStarsId-56]
	_ = x[transposeRightJoinsId-57]
	_ = x[resolveHavingId-58]
	_ = x[mergeUnionSchemasId-59]
	_ = x[flattenAggregationExprsId-60]
	_ = x[reorderProjectionId-61]
	_ = x[resolveSubqueryExprsId-62]
	_ = x[replaceCrossJoinsId-63]
	_ = x[moveJoinCondsToFilterId-64]
	_ = x[evalFilterId-65]
	_ = x[optimizeDistinctId-66]
	_ = x[hoistOutOfScopeFiltersId-67]
	_ = x[transformJoinApplyId-68]
	_ = x[hoistSelectExistsId-69]
	_ = x[finalizeSubqueriesId-70]
	_ = x[finalizeUnionsId-71]
	_ = x[loadTriggersId-72]
	_ = x[loadEventsId-73]
	_ = x[processTruncateId-74]
	_ = x[resolveAlterColumnId-75]
	_ = x[resolveGeneratorsId-76]
	_ = x[removeUnnecessaryConvertsId-77]
	_ = x[pruneColumnsId-78]
	_ = x[stripTableNameInDefaultsId-79]
	_ = x[foldEmptyJoinsId-80]
	_ = x[optimizeJoinsId-81]
	_ = x[pushdownFiltersId-82]
	_ = x[subqueryIndexesId-83]
	_ = x[pruneTablesId-84]
	_ = x[setJoinScopeLenId-85]
	_ = x[eraseProjectionId-86]
	_ = x[replaceSortPkId-87]
	_ = x[insertTopNId-88]
	_ = x[applyHashInId-89]
	_ = x[resolveInsertRowsId-90]
	_ = x[resolvePreparedInsertId-91]
	_ = x[applyTriggersId-92]
	_ = x[applyProceduresId-93]
	_ = x[assignRoutinesId-94]
	_ = x[modifyUpdateExprsForJoinId-95]
	_ = x[applyRowUpdateAccumulatorsId-96]
	_ = x[wrapWithRollbackId-97]
	_ = x[applyFKsId-98]
	_ = x[validateAfterId-99]
	_ = x[validateBeforeId-100]
	_ = x[validateUnionSchemasMatchId-101]
	_ = x[cacheSubqueryResultsId-102]
	_ = x[cacheSubqueryAliasesInJoinsId-103]
	_ = x[AutocommitId-104]
	_ = x[TrackProcessId-105]
	_ = x[parallelizeId-106]
	_ = x[clearWarningsId-107]
}

const _RuleId_name = "applyDefaultSelectLimitvalidateOffsetAndLimitvalidateStarExpressionsvalidateCreateTablevalidateExprSemresolveVariablesresolveNamedWindowsresolveSetVariablesresolveViewsliftCtesresolveCtesliftRecursiveCtesresolveDatabasesresolveTablesloadStoredProceduresvalidateDropTablessetTargetSchemasresolveCreateLikeparseColumnDefaultsresolveDropConstraintvalidateDropConstraintloadCheckConstraintsassignCatalogresolveAnalyzeTablesresolveCreateSelectresolveSubqueriessetViewTargetSchemaresolveUnionsresolveDescribeQuerycheckUniqueTableNamesdisambiguateTableFunctionsresolveTableFunctionsresolveDeclarationsresolveColumnDefaultsvalidateColumnDefaultsvalidateCreateTriggervalidateCreateProcedureloadInfoSchemavalidateDatabaseSetvalidatePrivilegesreresolveTablessetInsertColumnsvalidateJoinComplexityapplyBinlogReplicaControllerresolveNaturalJoinsresolveOrderbyLiteralsresolveFunctionsflattenTableAliasespushdownSortpushdownGroupbyAliasespushdownSubqueryAliasFiltersqualifyColumnsresolveColumnsvalidateCheckConstraintresolveBarewordSetVariablesreplaceCountStarexpandStarstransposeRightJoinsresolveHavingmergeUnionSchemasflattenAggregationExprsreorderProjectionresolveSubqueryExprsreplaceCrossJoinsmoveJoinCondsToFilterevalFilteroptimizeDistincthoistOutOfScopeFilterstransformJoinApplyhoistSelectExistsfinalizeSubqueriesfinalizeUnionsloadTriggersloadEventsprocessTruncateresolveAlterColumnresolveGeneratorsremoveUnnecessaryConvertspruneColumnsstripTableNamesFromColumnDefaultsfoldEmptyJoinsoptimizeJoinspushdownFilterssubqueryIndexespruneTablessetJoinScopeLeneraseProjectionreplaceSortPkinsertTopNapplyHashInresolveInsertRowsresolvePreparedInsertapplyTriggersapplyProceduresassignRoutinesmodifyUpdateExprsForJoinapplyRowUpdateAccumulatorsrollback triggersapplyFKsvalidateAftervalidateBeforevalidateUnionSchemasMatchcacheSubqueryResultscacheSubqueryAliasesInJoinsaddAutocommitNodetrackProcessparallelizeclearWarnings"

var _RuleId_index = [...]uint16{0, 23, 45, 68, 87, 102, 118, 137, 156, 168, 176, 187, 204, 220, 233, 253, 271, 287, 304, 323, 344, 366, 386, 399, 419, 438, 455, 474, 487, 507, 528, 554, 575, 594, 615, 637, 658, 681, 695, 714, 732, 747, 763, 785, 813, 832, 854, 870, 889, 901, 923, 951, 965, 979, 1002, 1029, 1045, 1056, 1075, 1088, 1105, 1128, 1145, 1165, 1182, 1203, 1213, 1229, 1251, 1269, 1286, 1304, 1318, 1330, 1340, 1355, 1373, 1390, 1415, 1427, 1460, 1474, 1487, 1502, 1517, 1528, 1543, 1558, 1571, 1581, 1592, 1609, 1630, 1643, 1658, 1672, 1696, 1722, 1739, 1747, 1760, 1774, 1799, 1819, 1846, 1863, 1875, 1886, 1899}

func (i RuleId) String() string {
	if i < 0 || i >= RuleId(len(_RuleId_index)-1) {
		return "RuleId(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleId_name[_RuleId_index[i]:_RuleId_index[i+1]]
}
